/**
 * Do not edit this file.  Any changes will be overwritten by the gamedata
 * updater or by upgrading your SourceMod install.
 *
 * To override data in this file, create a subdirectory named "custom" and
 * place your own gamedata file(s) inside of it.  Such files will be parsed
 * after SM's own.
 *
 * For more information, see http://wiki.alliedmods.net/Gamedata_Updating_(SourceMod)
 */

"Games"
{
	/* Sounds */
	"#default"
	{
		"Keys"
		{
			"SlapSoundCount"	"3"
			"SlapSound1"		"player/damage1.wav"
			"SlapSound2"		"player/damage2.wav"
			"SlapSound2"		"player/damage3.wav"
		}
	}
	
	/* General Temp Entities */
	"#default"
	{
		"Offsets"
		{
			"GetTEName"
			{
				"windows"	"4"
			}
			"GetTENext"
			{
				"windows"	"8"
			}
			"TE_GetServerClass"
			{
				"windows"	"0"
			}
		}
	}

	/* General GameRules */
	"#default"
	{
		"Keys"
		{
			"GameRulesProxy"		"CCSGameRulesProxy"
			"GameRulesDataTable"	"cs_gamerules_data"
		}
	}

	/* IServer interface pointer */
	"#default"
	{
		"Keys"
		{
			/* Signature for the beginning of IVEngineServer::CreateFakeClient.
			 *
			 * The engine binary is not actually scanned in order to look for
			 * this. SourceHook is used to used to determine the address of the
			 * function and this signature is used to verify that it contains
			 * the expected code. A pointer to sv (IServer interface) is used
			 * here.
			 */
			"CreateFakeClient_Windows"	"\x55\x8B\xEC\x56\xFF\x2A\x2A\xB9\x2A\x2A\x2A\x2A\xE8\x2A\x2A\x2A\x2A\x8B"
		}
		
		"Offsets"
		{
			/* Offset into IVEngineServer::CreateFakeClient */
			"sv"
			{
				"windows"	"8"
			}
		}
	}

	/* CBaseEntityOutput::FireOutput */
	"#default"
	{
		"Signatures"
		{
			"FireOutput"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x81\xEC\x2C\x01\x00\x00\xA1\x2A\x2A\x2A\x2A\x33\xC5\x89\x45\x2A\x53"
			}
		}
	}
	
	/* CBaseAnimating::LookupAttachment */
	"#default"
	{
		"Signatures"
		{
			"LookupAttachment"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x56\x8B\xF1\x80\xBE\x2A\x2A\x2A\x2A\x2A\x75\x2A\x83\xBE\x2A\x2A\x2A\x2A\x2A\x75\x2A\xE8\x2A\x2A\x2A\x2A\x85\xC0\x74\x2A\x8B\xCE\xE8\x2A\x2A\x2A\x2A\x8B\x86\x2A\x2A\x2A\x2A\x85\xC0\x74\x2A\x83\x38\x00\x74\x2A\xFF\x75"
			}
		}
	}
	
	/* SetUserInfo data */
	"#default"
	{
		"Offsets"
		{
			/**
			 * CBaseClient::SetUserCVar(char  const*,char  const*);
			 * Linux offset straight from VTable dump.
			 * Windows offset is crazy. Found the windows SetName function using string "(%d)%-0.*s"
			 * Cross referenced back to the vtable and counted manually (SetUserCvar is 1 higher, offsets start from 1)
			 */
			"SetUserCvar"
			{
				"windows"	"18"
			}
			/**
			 * CBaseClient::SetName(char  const*);
			 * Linux offset straight from VTable dump.
			 * Has string "(%d)%-0.*s"
			 */
			"SetClientName"
			{
				"windows"	"17"
			}
			/**
			 * Offset into CBaseClient - Used by CBaseServer::UpdateUserSettings to determine when changes have been made.
			 * Find CBaseClient::UpdateUserSettings (strings "net_maxroutable", "cl_updaterate" etc) and the offset is set to 0 near the end.
			 * Linux: 	mov     byte ptr [esi+98h], 0
			 * Win:	mov     byte ptr [esi+0A4h], 0
			 */
			"InfoChanged"
			{
				"windows"	"140"
			}
		}
	}
	
	"#default"
	{
		"Keys"
		{
			// Netprop on the team entity for team score
			"m_iScore"		"m_scoreTotal"
		}
		"Offsets"
		{
			"SetOwnerEntity"
			{
				"windows"	"19"
			}
			"GiveNamedItem"
			{
				"windows"	"421"
			}
			"RemovePlayerItem"
			{
				"windows"	"284"
			}
			"Weapon_GetSlot"
			{
				"windows"	"281"
			}
			"Ignite"
			{
				"windows"	"219"
			}
			"Extinguish"
			{
				"windows"	"223"
			}
			"Teleport"
			{
				"windows"	"113"
			}
			"CommitSuicide"
			{
				"windows"	"464"
			}
			"GetVelocity"
			{
				"windows"	"149"
			}
			"EyeAngles"
			{
				"windows"	"140"
			}
			"AcceptInput"
			{
				"windows"	"39"
			}
			"SetEntityModel"
			{
				"windows"	"26"
			}
			"WeaponEquip"
			{
				"windows"	"274"
			}
			"Activate"
			{
				"windows"	"36"
			}
			"PlayerRunCmd"
			{
				"windows"	"439"
			}
			"GiveAmmo"
			{
				"windows"	"265"
			}
			"GetAttachment"
			{
				"windows"	"214"
			}
		}
		"Signatures"
		{
			/**
			 *	CNetworkStringTableContainer::WriteBaselines
			 *	"Index error writing string table baseline %s\n"
			 */
			"WriteBaselines"
			{
				"library"	"engine"
				"windows"	"\x55\x8B\xEC\x81\xEC\x8C\x01\x00\x00\xA1\x2A\x2A\x2A\x2A\x33\xC5\x89\x45\x2A\x53"
			}
		}
	}
}
